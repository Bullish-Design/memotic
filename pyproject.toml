[project]
name = "memotic"
version = "0.5.1"
description = "A small, uv-managed Python client for the self-hosted Memos API"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "fastapi>=0.110.0",
    "uvicorn[standard]>=0.27.0",
    "pydantic>=2.6.0",
    "python-multipart>=0.0.9",
    "typer>=0.12.0",
    "rich>=13.0.0",
    "pydantic-settings>=2.10.1",
    "sqlmodel>=0.0.24",
    "webhooky",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.optional-dependencies]
test = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "httpx>=0.27.0",
    "pytest-cov>=4.0.0",
    "pytest-httpx>=0.22.0",
]

[project.scripts]
serve = "main:serve"
memotic = "memotic.cli:main"

[tool.uv.sources]
webhooky = { git = "https://github.com/Bullish-Design/webhooky.git" }

[project.entry-points."webhooky.plugins"]
memos = "memotic.webhook.plugin"

[tool.memotic.codegen]
source = "github"
repo = "usememos/memos"
ref = "main"
openapi_path = "proto/gen/openapi.yaml"
package_dir = "src/memotic/_openapi"

[tool.memotic.codegen.http]
connect_timeout = 15
read_timeout = 60

[tool.ruff]
target-version = "py312"
line-length = 120
src = ["src"]

[tool.ruff.lint]
select = ["E", "F", "I", "W", "UP", "B", "A", "C4", "ICN", "PIE", "T20", "PYI", "PT", "RSE", "RET", "SLF", "SIM", "ARG", "ERA", "PGH", "PLC", "PLE", "PLR", "PLW", "RUF"]

[tool.mypy]
python_version = "3.12"
strict = true
warn_return_any = true
warn_unused_configs = true

[tool.pytest.ini_options]
addopts = "-ra -q"
testpaths = ["src/tests"]
markers = [
    "integration: marks tests as integration tests (skipped without env)",
]
asyncio_mode = "auto"
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
