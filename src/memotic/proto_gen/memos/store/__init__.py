
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: store/activity.proto, store/attachment.proto, store/idp.proto, store/inbox.proto, store/memo.proto, store/user_setting.proto, store/workspace_setting.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = ("AttachmentStorageType","IdentityProviderType","InboxMessageType","UserSettingKey","WorkspaceSettingKey","WorkspaceStorageSettingStorageType","AccessTokensUserSetting","AccessTokensUserSettingAccessToken","ActivityMemoCommentPayload","ActivityPayload","AttachmentPayload","AttachmentPayloadS3Object","FieldMapping","GeneralUserSetting","IdentityProvider","IdentityProviderConfig","InboxMessage","MemoPayload","MemoPayloadLocation","MemoPayloadProperty","OAuth2Config","SessionsUserSetting","SessionsUserSettingClientInfo","SessionsUserSettingSession","ShortcutsUserSetting","ShortcutsUserSettingShortcut","StorageS3Config","UserSetting","WebhooksUserSetting","WebhooksUserSettingWebhook","WorkspaceBasicSetting","WorkspaceCustomProfile","WorkspaceGeneralSetting","WorkspaceMemoRelatedSetting","WorkspaceSetting","WorkspaceStorageSetting",)

import re
import builtins
import datetime
import dateutil.parser
import warnings
from collections.abc import AsyncIterable, AsyncIterator, Iterable, Iterator
import typing
from typing import TYPE_CHECKING

from dataclasses import dataclass

import betterproto2
from betterproto2.grpc.grpclib_server import ServiceBase
import grpc
import grpclib
from google.protobuf.descriptor import Descriptor, EnumDescriptor

from ...message_pool import default_message_pool

if TYPE_CHECKING:
    import grpclib.server
    from betterproto2.grpc.grpclib_client import MetadataLike
    from grpclib.metadata import Deadline

_COMPILER_VERSION="0.7.1"
betterproto2.check_compiler_version(_COMPILER_VERSION)
class AttachmentStorageType(betterproto2.Enum):


    ATTACHMENT_STORAGE_TYPE_UNSPECIFIED = 0

    LOCAL = 1
    """
    Attachment is stored locally. AKA, local file system.
    """

    S3 = 2
    """
    Attachment is stored in S3.
    """

    EXTERNAL = 3
    """
    Attachment is stored in an external storage. The reference is a URL.
    """




class IdentityProviderType(betterproto2.Enum):


    TYPE_UNSPECIFIED = 0

    OAUTH2 = 1




class InboxMessageType(betterproto2.Enum):


    TYPE_UNSPECIFIED = 0

    MEMO_COMMENT = 1

    VERSION_UPDATE = 2




class UserSettingKey(betterproto2.Enum):


    KEY_UNSPECIFIED = 0

    GENERAL = 1
    """
    General user settings.
    """

    SESSIONS = 2
    """
    User authentication sessions.
    """

    ACCESS_TOKENS = 3
    """
    Access tokens for the user.
    """

    SHORTCUTS = 4
    """
    The shortcuts of the user.
    """

    WEBHOOKS = 5
    """
    The webhooks of the user.
    """




class WorkspaceSettingKey(betterproto2.Enum):


    WORKSPACE_SETTING_KEY_UNSPECIFIED = 0

    BASIC = 1
    """
    BASIC is the key for basic settings.
    """

    GENERAL = 2
    """
    GENERAL is the key for general settings.
    """

    STORAGE = 3
    """
    STORAGE is the key for storage settings.
    """

    MEMO_RELATED = 4
    """
    MEMO_RELATED is the key for memo related settings.
    """




class WorkspaceStorageSettingStorageType(betterproto2.Enum):


    STORAGE_TYPE_UNSPECIFIED = 0

    DATABASE = 1
    """
    STORAGE_TYPE_DATABASE is the database storage type.
    """

    LOCAL = 2
    """
    STORAGE_TYPE_LOCAL is the local storage type.
    """

    S3 = 3
    """
    STORAGE_TYPE_S3 is the S3 storage type.
    """




@dataclass(eq=False, repr=False)
class AccessTokensUserSetting(betterproto2.Message):


    access_tokens: "list[AccessTokensUserSettingAccessToken]" = betterproto2.field(1, betterproto2.TYPE_MESSAGE, repeated=True)





default_message_pool.register_message("memos.store", "AccessTokensUserSetting", AccessTokensUserSetting)


@dataclass(eq=False, repr=False)
class AccessTokensUserSettingAccessToken(betterproto2.Message):


    access_token: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)
    """
    The access token is a JWT token.
    Including expiration time, issuer, etc.
    """

    description: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)
    """
    A description for the access token.
    """





default_message_pool.register_message("memos.store", "AccessTokensUserSetting.AccessToken", AccessTokensUserSettingAccessToken)


@dataclass(eq=False, repr=False)
class ActivityMemoCommentPayload(betterproto2.Message):


    memo_id: "int" = betterproto2.field(1, betterproto2.TYPE_INT32)

    related_memo_id: "int" = betterproto2.field(2, betterproto2.TYPE_INT32)





default_message_pool.register_message("memos.store", "ActivityMemoCommentPayload", ActivityMemoCommentPayload)


@dataclass(eq=False, repr=False)
class ActivityPayload(betterproto2.Message):


    memo_comment: "ActivityMemoCommentPayload | None" = betterproto2.field(1, betterproto2.TYPE_MESSAGE, optional=True)





default_message_pool.register_message("memos.store", "ActivityPayload", ActivityPayload)


@dataclass(eq=False, repr=False)
class AttachmentPayload(betterproto2.Message):
    """
    

    Oneofs:
        - payload: 
    """


    s3_object: "AttachmentPayloadS3Object | None" = betterproto2.field(1, betterproto2.TYPE_MESSAGE, optional=True, group="payload")





default_message_pool.register_message("memos.store", "AttachmentPayload", AttachmentPayload)


@dataclass(eq=False, repr=False)
class AttachmentPayloadS3Object(betterproto2.Message):


    s3_config: "StorageS3Config | None" = betterproto2.field(1, betterproto2.TYPE_MESSAGE, optional=True)

    key: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)
    """
    key is the S3 object key.
    """

    last_presigned_time: "datetime.datetime | None" = betterproto2.field(3, betterproto2.TYPE_MESSAGE, unwrap=lambda: __google__protobuf__.Timestamp, optional=True)
    """
    last_presigned_time is the last time the object was presigned.
    This is used to determine if the presigned URL is still valid.
    """





default_message_pool.register_message("memos.store", "AttachmentPayload.S3Object", AttachmentPayloadS3Object)


@dataclass(eq=False, repr=False)
class FieldMapping(betterproto2.Message):


    identifier: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)

    display_name: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)

    email: "str" = betterproto2.field(3, betterproto2.TYPE_STRING)

    avatar_url: "str" = betterproto2.field(4, betterproto2.TYPE_STRING)





default_message_pool.register_message("memos.store", "FieldMapping", FieldMapping)


@dataclass(eq=False, repr=False)
class GeneralUserSetting(betterproto2.Message):


    locale: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)
    """
    The user's locale.
    """

    memo_visibility: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)
    """
    The user's memo visibility setting.
    """

    theme: "str" = betterproto2.field(3, betterproto2.TYPE_STRING)
    """
    The user's theme preference.
    This references a CSS file in the web/public/themes/ directory.
    """





default_message_pool.register_message("memos.store", "GeneralUserSetting", GeneralUserSetting)


@dataclass(eq=False, repr=False)
class IdentityProvider(betterproto2.Message):


    id: "int" = betterproto2.field(1, betterproto2.TYPE_INT32)

    name: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)

    type: "IdentityProviderType" = betterproto2.field(3, betterproto2.TYPE_ENUM, default_factory=lambda: IdentityProviderType(0))

    identifier_filter: "str" = betterproto2.field(4, betterproto2.TYPE_STRING)

    config: "IdentityProviderConfig | None" = betterproto2.field(5, betterproto2.TYPE_MESSAGE, optional=True)





default_message_pool.register_message("memos.store", "IdentityProvider", IdentityProvider)


@dataclass(eq=False, repr=False)
class IdentityProviderConfig(betterproto2.Message):
    """
    

    Oneofs:
        - config: 
    """


    oauth2_config: "OAuth2Config | None" = betterproto2.field(1, betterproto2.TYPE_MESSAGE, optional=True, group="config")





default_message_pool.register_message("memos.store", "IdentityProviderConfig", IdentityProviderConfig)


@dataclass(eq=False, repr=False)
class InboxMessage(betterproto2.Message):


    type: "InboxMessageType" = betterproto2.field(1, betterproto2.TYPE_ENUM, default_factory=lambda: InboxMessageType(0))

    activity_id: "int | None" = betterproto2.field(2, betterproto2.TYPE_INT32, optional=True)





default_message_pool.register_message("memos.store", "InboxMessage", InboxMessage)


@dataclass(eq=False, repr=False)
class MemoPayload(betterproto2.Message):


    property: "MemoPayloadProperty | None" = betterproto2.field(1, betterproto2.TYPE_MESSAGE, optional=True)

    location: "MemoPayloadLocation | None" = betterproto2.field(2, betterproto2.TYPE_MESSAGE, optional=True)

    tags: "list[str]" = betterproto2.field(3, betterproto2.TYPE_STRING, repeated=True)





default_message_pool.register_message("memos.store", "MemoPayload", MemoPayload)


@dataclass(eq=False, repr=False)
class MemoPayloadLocation(betterproto2.Message):


    placeholder: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)

    latitude: "float" = betterproto2.field(2, betterproto2.TYPE_DOUBLE)

    longitude: "float" = betterproto2.field(3, betterproto2.TYPE_DOUBLE)





default_message_pool.register_message("memos.store", "MemoPayload.Location", MemoPayloadLocation)


@dataclass(eq=False, repr=False)
class MemoPayloadProperty(betterproto2.Message):
    """
    The calculated properties from the memo content.
    """


    has_link: "bool" = betterproto2.field(1, betterproto2.TYPE_BOOL)

    has_task_list: "bool" = betterproto2.field(2, betterproto2.TYPE_BOOL)

    has_code: "bool" = betterproto2.field(3, betterproto2.TYPE_BOOL)

    has_incomplete_tasks: "bool" = betterproto2.field(4, betterproto2.TYPE_BOOL)

    references: "list[str]" = betterproto2.field(5, betterproto2.TYPE_STRING, repeated=True)
    """
    The references of the memo. Should be a list of uuid.
    """





default_message_pool.register_message("memos.store", "MemoPayload.Property", MemoPayloadProperty)


@dataclass(eq=False, repr=False)
class OAuth2Config(betterproto2.Message):


    client_id: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)

    client_secret: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)

    auth_url: "str" = betterproto2.field(3, betterproto2.TYPE_STRING)

    token_url: "str" = betterproto2.field(4, betterproto2.TYPE_STRING)

    user_info_url: "str" = betterproto2.field(5, betterproto2.TYPE_STRING)

    scopes: "list[str]" = betterproto2.field(6, betterproto2.TYPE_STRING, repeated=True)

    field_mapping: "FieldMapping | None" = betterproto2.field(7, betterproto2.TYPE_MESSAGE, optional=True)





default_message_pool.register_message("memos.store", "OAuth2Config", OAuth2Config)


@dataclass(eq=False, repr=False)
class SessionsUserSetting(betterproto2.Message):


    sessions: "list[SessionsUserSettingSession]" = betterproto2.field(1, betterproto2.TYPE_MESSAGE, repeated=True)





default_message_pool.register_message("memos.store", "SessionsUserSetting", SessionsUserSetting)


@dataclass(eq=False, repr=False)
class SessionsUserSettingClientInfo(betterproto2.Message):


    user_agent: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)
    """
    User agent string of the client.
    """

    ip_address: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)
    """
    IP address of the client.
    """

    device_type: "str" = betterproto2.field(3, betterproto2.TYPE_STRING)
    """
    Optional. Device type (e.g., "mobile", "desktop", "tablet").
    """

    os: "str" = betterproto2.field(4, betterproto2.TYPE_STRING)
    """
    Optional. Operating system (e.g., "iOS 17.0", "Windows 11").
    """

    browser: "str" = betterproto2.field(5, betterproto2.TYPE_STRING)
    """
    Optional. Browser name and version (e.g., "Chrome 119.0").
    """





default_message_pool.register_message("memos.store", "SessionsUserSetting.ClientInfo", SessionsUserSettingClientInfo)


@dataclass(eq=False, repr=False)
class SessionsUserSettingSession(betterproto2.Message):


    session_id: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)
    """
    Unique session identifier.
    """

    create_time: "datetime.datetime | None" = betterproto2.field(2, betterproto2.TYPE_MESSAGE, unwrap=lambda: __google__protobuf__.Timestamp, optional=True)
    """
    Timestamp when the session was created.
    """

    last_accessed_time: "datetime.datetime | None" = betterproto2.field(3, betterproto2.TYPE_MESSAGE, unwrap=lambda: __google__protobuf__.Timestamp, optional=True)
    """
    Timestamp when the session was last accessed.
    Used for sliding expiration calculation (last_accessed_time + 2 weeks).
    """

    client_info: "SessionsUserSettingClientInfo | None" = betterproto2.field(4, betterproto2.TYPE_MESSAGE, optional=True)
    """
    Client information associated with this session.
    """





default_message_pool.register_message("memos.store", "SessionsUserSetting.Session", SessionsUserSettingSession)


@dataclass(eq=False, repr=False)
class ShortcutsUserSetting(betterproto2.Message):


    shortcuts: "list[ShortcutsUserSettingShortcut]" = betterproto2.field(1, betterproto2.TYPE_MESSAGE, repeated=True)





default_message_pool.register_message("memos.store", "ShortcutsUserSetting", ShortcutsUserSetting)


@dataclass(eq=False, repr=False)
class ShortcutsUserSettingShortcut(betterproto2.Message):


    id: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)

    title: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)

    filter: "str" = betterproto2.field(3, betterproto2.TYPE_STRING)





default_message_pool.register_message("memos.store", "ShortcutsUserSetting.Shortcut", ShortcutsUserSettingShortcut)


@dataclass(eq=False, repr=False)
class StorageS3Config(betterproto2.Message):
    """
    Reference: https://developers.cloudflare.com/r2/examples/aws/aws-sdk-go/
    """


    access_key_id: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)

    access_key_secret: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)

    endpoint: "str" = betterproto2.field(3, betterproto2.TYPE_STRING)

    region: "str" = betterproto2.field(4, betterproto2.TYPE_STRING)

    bucket: "str" = betterproto2.field(5, betterproto2.TYPE_STRING)

    use_path_style: "bool" = betterproto2.field(6, betterproto2.TYPE_BOOL)





default_message_pool.register_message("memos.store", "StorageS3Config", StorageS3Config)


@dataclass(eq=False, repr=False)
class UserSetting(betterproto2.Message):
    """
    

    Oneofs:
        - value: 
    """


    user_id: "int" = betterproto2.field(1, betterproto2.TYPE_INT32)

    key: "UserSettingKey" = betterproto2.field(2, betterproto2.TYPE_ENUM, default_factory=lambda: UserSettingKey(0))

    general: "GeneralUserSetting | None" = betterproto2.field(3, betterproto2.TYPE_MESSAGE, optional=True, group="value")

    sessions: "SessionsUserSetting | None" = betterproto2.field(4, betterproto2.TYPE_MESSAGE, optional=True, group="value")

    access_tokens: "AccessTokensUserSetting | None" = betterproto2.field(5, betterproto2.TYPE_MESSAGE, optional=True, group="value")

    shortcuts: "ShortcutsUserSetting | None" = betterproto2.field(6, betterproto2.TYPE_MESSAGE, optional=True, group="value")

    webhooks: "WebhooksUserSetting | None" = betterproto2.field(7, betterproto2.TYPE_MESSAGE, optional=True, group="value")





default_message_pool.register_message("memos.store", "UserSetting", UserSetting)


@dataclass(eq=False, repr=False)
class WebhooksUserSetting(betterproto2.Message):


    webhooks: "list[WebhooksUserSettingWebhook]" = betterproto2.field(1, betterproto2.TYPE_MESSAGE, repeated=True)





default_message_pool.register_message("memos.store", "WebhooksUserSetting", WebhooksUserSetting)


@dataclass(eq=False, repr=False)
class WebhooksUserSettingWebhook(betterproto2.Message):


    id: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)
    """
    Unique identifier for the webhook
    """

    title: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)
    """
    Descriptive title for the webhook
    """

    url: "str" = betterproto2.field(3, betterproto2.TYPE_STRING)
    """
    The webhook URL endpoint
    """





default_message_pool.register_message("memos.store", "WebhooksUserSetting.Webhook", WebhooksUserSettingWebhook)


@dataclass(eq=False, repr=False)
class WorkspaceBasicSetting(betterproto2.Message):


    secret_key: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)
    """
    The secret key for workspace. Mainly used for session management.
    """

    schema_version: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)
    """
    The current schema version of database.
    """





default_message_pool.register_message("memos.store", "WorkspaceBasicSetting", WorkspaceBasicSetting)


@dataclass(eq=False, repr=False)
class WorkspaceCustomProfile(betterproto2.Message):


    title: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)

    description: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)

    logo_url: "str" = betterproto2.field(3, betterproto2.TYPE_STRING)

    locale: "str" = betterproto2.field(4, betterproto2.TYPE_STRING)





default_message_pool.register_message("memos.store", "WorkspaceCustomProfile", WorkspaceCustomProfile)


@dataclass(eq=False, repr=False)
class WorkspaceGeneralSetting(betterproto2.Message):


    theme: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)
    """
    theme is the name of the selected theme.
    This references a CSS file in the web/public/themes/ directory.
    """

    disallow_user_registration: "bool" = betterproto2.field(2, betterproto2.TYPE_BOOL)
    """
    disallow_user_registration disallows user registration.
    """

    disallow_password_auth: "bool" = betterproto2.field(3, betterproto2.TYPE_BOOL)
    """
    disallow_password_auth disallows password authentication.
    """

    additional_script: "str" = betterproto2.field(4, betterproto2.TYPE_STRING)
    """
    additional_script is the additional script.
    """

    additional_style: "str" = betterproto2.field(5, betterproto2.TYPE_STRING)
    """
    additional_style is the additional style.
    """

    custom_profile: "WorkspaceCustomProfile | None" = betterproto2.field(6, betterproto2.TYPE_MESSAGE, optional=True)
    """
    custom_profile is the custom profile.
    """

    week_start_day_offset: "int" = betterproto2.field(7, betterproto2.TYPE_INT32)
    """
    week_start_day_offset is the week start day offset from Sunday.
    0: Sunday, 1: Monday, 2: Tuesday, 3: Wednesday, 4: Thursday, 5: Friday, 6: Saturday
    Default is Sunday.
    """

    disallow_change_username: "bool" = betterproto2.field(8, betterproto2.TYPE_BOOL)
    """
    disallow_change_username disallows changing username.
    """

    disallow_change_nickname: "bool" = betterproto2.field(9, betterproto2.TYPE_BOOL)
    """
    disallow_change_nickname disallows changing nickname.
    """





default_message_pool.register_message("memos.store", "WorkspaceGeneralSetting", WorkspaceGeneralSetting)


@dataclass(eq=False, repr=False)
class WorkspaceMemoRelatedSetting(betterproto2.Message):


    disallow_public_visibility: "bool" = betterproto2.field(1, betterproto2.TYPE_BOOL)
    """
    disallow_public_visibility disallows set memo as public visibility.
    """

    display_with_update_time: "bool" = betterproto2.field(2, betterproto2.TYPE_BOOL)
    """
    display_with_update_time orders and displays memo with update time.
    """

    content_length_limit: "int" = betterproto2.field(3, betterproto2.TYPE_INT32)
    """
    content_length_limit is the limit of content length. Unit is byte.
    """

    enable_double_click_edit: "bool" = betterproto2.field(4, betterproto2.TYPE_BOOL)
    """
    enable_double_click_edit enables editing on double click.
    """

    enable_link_preview: "bool" = betterproto2.field(5, betterproto2.TYPE_BOOL)
    """
    enable_link_preview enables links preview.
    """

    reactions: "list[str]" = betterproto2.field(7, betterproto2.TYPE_STRING, repeated=True)
    """
    reactions is the list of reactions.
    """

    disable_markdown_shortcuts: "bool" = betterproto2.field(8, betterproto2.TYPE_BOOL)
    """
    disable markdown shortcuts
    """

    enable_blur_nsfw_content: "bool" = betterproto2.field(9, betterproto2.TYPE_BOOL)
    """
    enable_blur_nsfw_content enables blurring of content marked as not safe for work (NSFW).
    """

    nsfw_tags: "list[str]" = betterproto2.field(10, betterproto2.TYPE_STRING, repeated=True)
    """
    nsfw_tags is the list of tags that mark content as NSFW for blurring.
    """





default_message_pool.register_message("memos.store", "WorkspaceMemoRelatedSetting", WorkspaceMemoRelatedSetting)


@dataclass(eq=False, repr=False)
class WorkspaceSetting(betterproto2.Message):
    """
    

    Oneofs:
        - value: 
    """


    key: "WorkspaceSettingKey" = betterproto2.field(1, betterproto2.TYPE_ENUM, default_factory=lambda: WorkspaceSettingKey(0))

    basic_setting: "WorkspaceBasicSetting | None" = betterproto2.field(2, betterproto2.TYPE_MESSAGE, optional=True, group="value")

    general_setting: "WorkspaceGeneralSetting | None" = betterproto2.field(3, betterproto2.TYPE_MESSAGE, optional=True, group="value")

    storage_setting: "WorkspaceStorageSetting | None" = betterproto2.field(4, betterproto2.TYPE_MESSAGE, optional=True, group="value")

    memo_related_setting: "WorkspaceMemoRelatedSetting | None" = betterproto2.field(5, betterproto2.TYPE_MESSAGE, optional=True, group="value")





default_message_pool.register_message("memos.store", "WorkspaceSetting", WorkspaceSetting)


@dataclass(eq=False, repr=False)
class WorkspaceStorageSetting(betterproto2.Message):


    storage_type: "WorkspaceStorageSettingStorageType" = betterproto2.field(1, betterproto2.TYPE_ENUM, default_factory=lambda: WorkspaceStorageSettingStorageType(0))
    """
    storage_type is the storage type.
    """

    filepath_template: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)
    """
    The template of file path.
    e.g. assets/{timestamp}_{filename}
    """

    upload_size_limit_mb: "int" = betterproto2.field(3, betterproto2.TYPE_INT64)
    """
    The max upload size in megabytes.
    """

    s3_config: "StorageS3Config | None" = betterproto2.field(4, betterproto2.TYPE_MESSAGE, optional=True)
    """
    The S3 config.
    """





default_message_pool.register_message("memos.store", "WorkspaceStorageSetting", WorkspaceStorageSetting)




from ...google import protobuf as __google__protobuf__


